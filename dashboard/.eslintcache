[{"/home/runner/public/dashboard/src/index.tsx":"1","/home/runner/public/dashboard/src/reportWebVitals.ts":"2","/home/runner/public/dashboard/src/App.tsx":"3","/home/runner/public/dashboard/src/utils/themes.tsx":"4","/home/runner/public/dashboard/src/components/Menu.tsx":"5","/home/runner/public/dashboard/src/pages/Dashboard.tsx":"6","/home/runner/public/dashboard/src/utils/contexts/GuildStoreContext.tsx":"7","/home/runner/public/dashboard/src/utils/contexts/GuildContext.tsx":"8","/home/runner/public/dashboard/src/components/Sidebar.tsx":"9","/home/runner/public/dashboard/src/__mocks__/index.tsx":"10","/home/runner/public/dashboard/src/utils/styles.tsx":"11","/home/runner/public/dashboard/src/utils/constants.tsx":"12","/home/runner/public/dashboard/src/components/DropdownMenu.tsx":"13","/home/runner/public/dashboard/src/components/Input.tsx":"14"},{"size":1137,"mtime":1634390808620,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":1634390808620,"results":"17","hashOfConfig":"16"},{"size":4423,"mtime":1634456277172,"results":"18","hashOfConfig":"16"},{"size":368,"mtime":1634390808620,"results":"19","hashOfConfig":"16"},{"size":1252,"mtime":1634390808620,"results":"20","hashOfConfig":"16"},{"size":1589,"mtime":1634456239857,"results":"21","hashOfConfig":"16"},{"size":349,"mtime":1634390808620,"results":"22","hashOfConfig":"16"},{"size":333,"mtime":1634390808620,"results":"23","hashOfConfig":"16"},{"size":1355,"mtime":1634427447757,"results":"24","hashOfConfig":"16"},{"size":1069,"mtime":1634390808620,"results":"25","hashOfConfig":"16"},{"size":4791,"mtime":1634427693564,"results":"26","hashOfConfig":"16"},{"size":1175,"mtime":1634453946296,"results":"27","hashOfConfig":"16"},{"size":2372,"mtime":1634455371982,"results":"28","hashOfConfig":"16"},{"size":875,"mtime":1634456152550,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},"25ba06",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},"/home/runner/public/dashboard/src/index.tsx",["60","61","62"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { DarkTheme } from \"./utils/themes\";\nimport \"./index.css\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:3001/api/graphql\",\n//   cache: new InMemoryCache(),\n//   credentials: \"include\",\n// });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ThemeProvider theme={DarkTheme}>\n        <App />\n      </ThemeProvider>\n      {/* <ApolloProvider client={client}>\n        <ThemeProvider theme={DarkTheme}>\n          <App />\n        </ThemeProvider>\n      </ApolloProvider> */}\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/home/runner/public/dashboard/src/reportWebVitals.ts",[],"/home/runner/public/dashboard/src/App.tsx",["63","64","65","66","67","68"],"/home/runner/public/dashboard/src/utils/themes.tsx",[],"/home/runner/public/dashboard/src/components/Menu.tsx",[],"/home/runner/public/dashboard/src/pages/Dashboard.tsx",[],"/home/runner/public/dashboard/src/utils/contexts/GuildStoreContext.tsx",[],"/home/runner/public/dashboard/src/utils/contexts/GuildContext.tsx",[],"/home/runner/public/dashboard/src/components/Sidebar.tsx",[],"/home/runner/public/dashboard/src/__mocks__/index.tsx",[],"/home/runner/public/dashboard/src/utils/styles.tsx",[],"/home/runner/public/dashboard/src/utils/constants.tsx",[],"/home/runner/public/dashboard/src/components/DropdownMenu.tsx",[],"/home/runner/public/dashboard/src/components/Input.tsx",["69","70","71","72","73","74","75"],"import React, {Component, useState, useRef} from \"react\"\nimport {Guild} from '../utils/types'\nimport axios from 'axios'\nimport {\n  Button,\n  DropdownFooter,\n  DropdownHeader,\n  DropdownItem,\n  DropdownItemContainer,\n  Input,\n} from \"../utils/styles\";\ninterface TextProps {\n  title: string;\n  guild: any;\n  default: string\n}\nfunction update(text:string,title:string,guild:any) {\n  axios.put('/api/guild/'+guild.id+'/config',{title,value:text})\n}\n\nexport function TextInput(props: TextProps) {\nconst input = useRef<HTMLInputElement>(null);\n  const [text,setText]=useState(props.default)\n  return   <div>\n    <input type=\"text\" defaultValue={props.default} ref={input} onChange={()=>setText(input?.current?.value || props.default)} />\n    <Button style={{ marginRight: \"5px\" }} onClick={()=>update(text,props.title,props.guild)}>\n              Save\n            </Button></div>\n}",{"ruleId":"76","severity":1,"message":"77","line":9,"column":10,"nodeType":"78","messageId":"79","endLine":9,"endColumn":22},{"ruleId":"76","severity":1,"message":"80","line":9,"column":24,"nodeType":"78","messageId":"79","endLine":9,"endColumn":38},{"ruleId":"76","severity":1,"message":"81","line":9,"column":40,"nodeType":"78","messageId":"79","endLine":9,"endColumn":53},{"ruleId":"76","severity":1,"message":"82","line":3,"column":25,"nodeType":"78","messageId":"79","endLine":3,"endColumn":33},{"ruleId":"76","severity":1,"message":"83","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":18},{"ruleId":"76","severity":1,"message":"84","line":11,"column":10,"nodeType":"78","messageId":"79","endLine":11,"endColumn":17},{"ruleId":"76","severity":1,"message":"85","line":12,"column":20,"nodeType":"78","messageId":"79","endLine":12,"endColumn":30},{"ruleId":"76","severity":1,"message":"86","line":18,"column":10,"nodeType":"78","messageId":"79","endLine":18,"endColumn":15},{"ruleId":"76","severity":1,"message":"87","line":35,"column":13,"nodeType":"78","messageId":"79","endLine":35,"endColumn":17},{"ruleId":"76","severity":1,"message":"88","line":1,"column":16,"nodeType":"78","messageId":"79","endLine":1,"endColumn":25},{"ruleId":"76","severity":1,"message":"89","line":2,"column":9,"nodeType":"78","messageId":"79","endLine":2,"endColumn":14},{"ruleId":"76","severity":1,"message":"90","line":6,"column":3,"nodeType":"78","messageId":"79","endLine":6,"endColumn":17},{"ruleId":"76","severity":1,"message":"91","line":7,"column":3,"nodeType":"78","messageId":"79","endLine":7,"endColumn":17},{"ruleId":"76","severity":1,"message":"92","line":8,"column":3,"nodeType":"78","messageId":"79","endLine":8,"endColumn":15},{"ruleId":"76","severity":1,"message":"93","line":9,"column":3,"nodeType":"78","messageId":"79","endLine":9,"endColumn":24},{"ruleId":"76","severity":1,"message":"94","line":10,"column":3,"nodeType":"78","messageId":"79","endLine":10,"endColumn":8},"@typescript-eslint/no-unused-vars","'ApolloClient' is defined but never used.","Identifier","unusedVar","'ApolloProvider' is defined but never used.","'InMemoryCache' is defined but never used.","'Redirect' is defined but never used.","'useQuery' is defined but never used.","'getUser' is defined but never used.","'mockGuilds' is defined but never used.","'token' is assigned a value but never used.","'inst' is assigned a value but never used.","'Component' is defined but never used.","'Guild' is defined but never used.","'DropdownFooter' is defined but never used.","'DropdownHeader' is defined but never used.","'DropdownItem' is defined but never used.","'DropdownItemContainer' is defined but never used.","'Input' is defined but never used."]