{"ast":null,"code":"import _regeneratorRuntime from\"/home/runner/public/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/runner/public/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/runner/public/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from\"react\";import{Switch,Route,Redirect,useHistory}from\"react-router-dom\";import{Menu}from\"./components/Menu\";import{Sidebar}from\"./components/Sidebar\";import{DashboardPage}from\"./pages/Dashboard\";import{GuildContextProvider}from\"./utils/contexts/GuildContext\";import{GuildStoreContextProvider}from\"./utils/contexts/GuildStoreContext\";import{guilds as mockGuilds}from\"./__mocks__\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),guild=_React$useState2[0],setGuild=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),guilds=_React$useState4[0],setGuilds=_React$useState4[1];var _React$useState5=React.useState(),_React$useState6=_slicedToArray(_React$useState5,2),token=_React$useState6[0],setToken=_React$useState6[1];var history=useHistory();//const { loading, error } = useQuery(getUser, {\n// onCompleted: ({ getUser }) => {\n//   const { guilds } = getUser;\n//     setGuilds(guilds);\n//   },\n// });\n// console.log(error);\n// if (loading) return <h1>Loading</h1>;\n// if (error) return <h1>You are making too many requests.</h1>;\nReact.useEffect(function(){window.location.query=new URL(window.location).searchParams;function run(){return _run.apply(this,arguments);}function _run(){_run=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,_data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(!(window.location.query.has('code')||window.localStorage.getItem('access_token')&&Date.now()<window.localStorage.getItem('refresh_on')||window.localStorage.getItem('refresh_token'))){_context.next=28;break;}if(!window.location.query.has('code')){_context.next=11;break;}_context.next=4;return fetch('/api/access?code='+window.location.query.get('code'));case 4:data=_context.sent;window.localStorage.setItem('access_token',data.access_token);window.localStorage.setItem('refresh_on',data.refresh_on);window.localStorage.setItem('refresh_token',data.refresh_token);setToken(data.access_token);_context.next=21;break;case 11:if(!(window.localStorage.getItem('access_token')&&Date.now()<window.localStorage.getItem('refresh_on'))){_context.next=15;break;}setToken(window.localStorage.getItem('access_token'));_context.next=21;break;case 15:_context.next=17;return fetch('/api/refresh',{\"method\":\"POST\",\"body\":{\"refresh_token\":window.localStorage.getItem('refresh_token')}});case 17:_data=_context.sent;window.localStorage.setItem('access_token',_data.access_token);window.localStorage.setItem('refresh_on',_data.refresh_on);setToken(_data.access_token);case 21:_context.t0=setGuilds;_context.next=24;return fetch('/api/guilds',{\"method\":\"POST\",\"body\":{\"access_token\":token}});case 24:_context.t1=_context.sent;(0,_context.t0)(_context.t1);_context.next=29;break;case 28:console.log(\"Setting Guilds\");case 29:setGuilds(mockGuilds);case 30:case\"end\":return _context.stop();}}},_callee);}));return _run.apply(this,arguments);}run();},[]);return/*#__PURE__*/_jsxs(Providers,{guild:guild,setGuild:setGuild,guilds:guilds,setGuilds:setGuilds,children:[/*#__PURE__*/_jsx(Sidebar,{guilds:guilds,history:history}),/*#__PURE__*/_jsx(Menu,{title:\"Drinks Bot Menu\",history:history}),/*#__PURE__*/_jsx(Routes,{})]});}function Providers(_ref){var children=_ref.children,guild=_ref.guild,setGuild=_ref.setGuild,guilds=_ref.guilds,setGuilds=_ref.setGuilds;return/*#__PURE__*/_jsx(GuildContextProvider,{value:{guild:guild,setGuild:setGuild},children:/*#__PURE__*/_jsx(GuildStoreContextProvider,{value:{guilds:guilds,setGuilds:setGuilds},children:children})});}function Routes(){return/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Redirect,{path:\"/\",exact:true,to:\"/dashboard\"}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",exact:true,component:DashboardPage}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard/:guildId\",exact:true,component:DashboardPage}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard/:guildId/general/muted\",exact:true,component:DashboardPage})]});}export default App;","map":{"version":3,"sources":["/home/runner/public/dashboard/src/App.tsx"],"names":["React","Switch","Route","Redirect","useHistory","Menu","Sidebar","DashboardPage","GuildContextProvider","GuildStoreContextProvider","guilds","mockGuilds","App","useState","guild","setGuild","setGuilds","token","setToken","history","useEffect","window","location","query","URL","searchParams","run","has","localStorage","getItem","Date","now","fetch","get","data","setItem","access_token","refresh_on","refresh_token","console","log","Providers","children","Routes"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport { Menu } from \"./components/Menu\";\nimport { Sidebar } from \"./components/Sidebar\";\nimport { DashboardPage } from \"./pages/Dashboard\";\nimport { GuildContextProvider } from \"./utils/contexts/GuildContext\";\nimport { GuildStoreContextProvider } from \"./utils/contexts/GuildStoreContext\";\nimport { Guild } from \"./utils/types\";\nimport { useQuery } from \"@apollo/client\";\nimport { getUser } from \"./graphql\";\nimport { guilds as mockGuilds } from \"./__mocks__\";\n\nfunction App() {\n  const [guild, setGuild] = React.useState<Guild | undefined>();\n  const [guilds, setGuilds] = React.useState<Guild[]>([]);\n  const [token, setToken] = React.useState<any>()\n  const history = useHistory();\n\n   //const { loading, error } = useQuery(getUser, {\n   // onCompleted: ({ getUser }) => {\n   //   const { guilds } = getUser;\n  //     setGuilds(guilds);\n  //   },\n  // });\n\n  // console.log(error);\n\n  // if (loading) return <h1>Loading</h1>;\n  // if (error) return <h1>You are making too many requests.</h1>;\n  React.useEffect(() => {\n    window.location.query = (new URL(window.location)).searchParams\n    async function run() {\n    if(window.location.query.has('code') || (window.localStorage.getItem('access_token') && Date.now() < window.localStorage.getItem('refresh_on')) || window.localStorage.getItem('refresh_token')) {\n      if(window.location.query.has('code')) {\n        const data = await fetch('/api/access?code='+window.location.query.get('code'))\n        window.localStorage.setItem('access_token',data.access_token)\n        window.localStorage.setItem('refresh_on',data.refresh_on)\n        window.localStorage.setItem('refresh_token',data.refresh_token)\n        setToken(data.access_token)\n      } else if(window.localStorage.getItem('access_token') && Date.now() < window.localStorage.getItem('refresh_on')) {\n        setToken(window.localStorage.getItem('access_token'))\n      } else {\n        let data = await fetch('/api/refresh',{\n          \"method\": \"POST\",\n          \"body\": {\"refresh_token\":window.localStorage.getItem('refresh_token')}\n        })\n         window.localStorage.setItem('access_token',data.access_token)\n        window.localStorage.setItem('refresh_on',data.refresh_on)\n        setToken(data.access_token)\n      }\n      setGuilds(await fetch('/api/guilds',{\n          \"method\": \"POST\",\n          \"body\": {\"access_token\":token}\n        }))\n    } else \n       \n    console.log(\"Setting Guilds\");\n    setGuilds(mockGuilds);\n    }\n    run()\n  }, []);\n\n  return (\n    <Providers\n      guild={guild}\n      setGuild={setGuild}\n      guilds={guilds}\n      setGuilds={setGuilds}\n    >\n      <Sidebar guilds={guilds} history={history} />\n      <Menu title=\"Drinks Bot Menu\" history={history} />\n      <Routes />\n    </Providers>\n  );\n}\n\nfunction Providers({ children, guild, setGuild, guilds, setGuilds }: any) {\n  return (\n    <GuildContextProvider value={{ guild, setGuild }}>\n      <GuildStoreContextProvider value={{ guilds, setGuilds }}>\n        {children}\n      </GuildStoreContextProvider>\n    </GuildContextProvider>\n  );\n}\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Redirect path=\"/\" exact={true} to=\"/dashboard\" />\n      <Route path=\"/dashboard\" exact={true} component={DashboardPage} />\n      <Route\n        path=\"/dashboard/:guildId\"\n        exact={true}\n        component={DashboardPage}\n      />\n      <Route\n        path=\"/dashboard/:guildId/general/muted\"\n        exact={true}\n        component={DashboardPage}\n      />\n    </Switch>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}