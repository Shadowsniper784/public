{"ast":null,"code":"import _regeneratorRuntime from\"/home/runner/public/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/runner/public/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/runner/public/dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import*as React from\"react\";import{Switch,Route,Redirect,useHistory}from\"react-router-dom\";import{Menu}from\"./components/Menu\";import{Sidebar}from\"./components/Sidebar\";import{DashboardPage}from\"./pages/Dashboard\";import{GuildContextProvider}from\"./utils/contexts/GuildContext\";import{GuildStoreContextProvider}from\"./utils/contexts/GuildStoreContext\";import{guilds as mockGuilds}from\"./__mocks__\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _React$useState=React.useState(),_React$useState2=_slicedToArray(_React$useState,2),guild=_React$useState2[0],setGuild=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),guilds=_React$useState4[0],setGuilds=_React$useState4[1];var _React$useState5=React.useState(),_React$useState6=_slicedToArray(_React$useState5,2),token=_React$useState6[0],setToken=_React$useState6[1];var history=useHistory();//const { loading, error } = useQuery(getUser, {\n// onCompleted: ({ getUser }) => {\n//   const { guilds } = getUser;\n//     setGuilds(guilds);\n//   },\n// });\n// console.log(error);\n// if (loading) return <h1>Loading</h1>;\n// if (error) return <h1>You are making too many requests.</h1>;\nReact.useEffect(function(){function run(){return _run.apply(this,arguments);}function _run(){_run=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var search,query,data,_data;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:search=window.location.search;query=new URLSearchParams(search);if(!(query.has('code')||window.localStorage.getItem('access_token')&&Math.round(Date.now()/1000)<parseInt(window.localStorage.getItem('refresh_on'))||window.localStorage.getItem('refresh_token'))){_context.next=30;break;}if(!query.has('code')){_context.next=13;break;}_context.next=6;return fetch('/api/access?code='+query.get('code'));case 6:data=_context.sent;window.localStorage.setItem('access_token',data.access_token);window.localStorage.setItem('refresh_on',data.refresh_on);window.localStorage.setItem('refresh_token',data.refresh_token);setToken(data.access_token);_context.next=23;break;case 13:if(!(window.localStorage.getItem('access_token')&&Math.round(Date.now()/1000)<parseInt(window.localStorage.getItem('refresh_on')))){_context.next=17;break;}setToken(window.localStorage.getItem('access_token'));_context.next=23;break;case 17:_context.next=19;return fetch('/api/refresh',{\"method\":\"POST\",\"body\":{\"refresh_token\":window.localStorage.getItem('refresh_token')}});case 19:_data=_context.sent;window.localStorage.setItem('access_token',_data.access_token);window.localStorage.setItem('refresh_on',_data.refresh_on);setToken(_data.access_token);case 23:_context.t0=setGuilds;_context.next=26;return fetch('/api/guilds',{\"method\":\"POST\",\"body\":{\"access_token\":token}});case 26:_context.t1=_context.sent;(0,_context.t0)(_context.t1);_context.next=31;break;case 30:console.log(\"Setting Guilds\");case 31:setGuilds(mockGuilds);case 32:case\"end\":return _context.stop();}}},_callee);}));return _run.apply(this,arguments);}run();},[]);return/*#__PURE__*/_jsxs(Providers,{guild:guild,setGuild:setGuild,guilds:guilds,setGuilds:setGuilds,children:[/*#__PURE__*/_jsx(Sidebar,{guilds:guilds,history:history}),\" \",/*#__PURE__*/_jsx(Menu,{title:\"Drinks Bot Menu\",history:history}),\" \",/*#__PURE__*/_jsx(Routes,{})]});}function Providers(_ref){var children=_ref.children,guild=_ref.guild,setGuild=_ref.setGuild,guilds=_ref.guilds,setGuilds=_ref.setGuilds;return/*#__PURE__*/_jsxs(GuildContextProvider,{value:{guild:guild,setGuild:setGuild},children:[/*#__PURE__*/_jsxs(GuildStoreContextProvider,{value:{guilds:guilds,setGuilds:setGuilds},children:[\" \",children,\" \"]}),\" \"]});}function Routes(){return/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Redirect,{path:\"/\",exact:true,to:\"/dashboard\"}),/*#__PURE__*/_jsx(Route,{path:\"/dashboard\",exact:true,component:DashboardPage}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/dashboard/:guildId\",exact:true,component:DashboardPage}),\" \",/*#__PURE__*/_jsx(Route,{path:\"/dashboard/:guildId/general/muted\",exact:true,component:DashboardPage}),\" \"]});}export default App;","map":{"version":3,"sources":["/home/runner/public/dashboard/src/App.tsx"],"names":["React","Switch","Route","Redirect","useHistory","Menu","Sidebar","DashboardPage","GuildContextProvider","GuildStoreContextProvider","guilds","mockGuilds","App","useState","guild","setGuild","setGuilds","token","setToken","history","useEffect","run","search","window","location","query","URLSearchParams","has","localStorage","getItem","Math","round","Date","now","parseInt","fetch","get","data","setItem","access_token","refresh_on","refresh_token","console","log","Providers","children","Routes"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport {\n    Switch,\n    Route,\n    Redirect,\n    useHistory\n} from \"react-router-dom\";\nimport {\n    Menu\n} from \"./components/Menu\";\nimport {\n    Sidebar\n} from \"./components/Sidebar\";\nimport {\n    DashboardPage\n} from \"./pages/Dashboard\";\nimport {\n    GuildContextProvider\n} from \"./utils/contexts/GuildContext\";\nimport {\n    GuildStoreContextProvider\n} from \"./utils/contexts/GuildStoreContext\";\nimport {\n    Guild\n} from \"./utils/types\";\nimport {\n    useQuery\n} from \"@apollo/client\";\nimport {\n    getUser\n} from \"./graphql\";\nimport {\n    guilds as mockGuilds\n} from \"./__mocks__\";\n\nfunction App() {\n    const [guild, setGuild] = React.useState < Guild | undefined > ();\n    const [guilds, setGuilds] = React.useState < Guild[] > ([]);\n    const [token, setToken] = React.useState < any > ()\n    const history = useHistory();\n\n    //const { loading, error } = useQuery(getUser, {\n    // onCompleted: ({ getUser }) => {\n    //   const { guilds } = getUser;\n    //     setGuilds(guilds);\n    //   },\n    // });\n\n    // console.log(error);\n\n    // if (loading) return <h1>Loading</h1>;\n    // if (error) return <h1>You are making too many requests.</h1>;\n    React.useEffect(() => {\n\n        async function run() {\n            let search = window.location.search;\n            let query = new URLSearchParams(search);\n            if (query.has('code') || (window.localStorage.getItem('access_token') && Math.round(Date.now() / 1000) < parseInt(window.localStorage.getItem('refresh_on'))) || window.localStorage.getItem('refresh_token')) {\n                if (query.has('code')) {\n                    const data = await fetch('/api/access?code=' + query.get('code'))\n                    window.localStorage.setItem('access_token', data.access_token)\n                    window.localStorage.setItem('refresh_on', data.refresh_on)\n                    window.localStorage.setItem('refresh_token', data.refresh_token)\n                    setToken(data.access_token)\n                } else if (window.localStorage.getItem('access_token') && Math.round(Date.now() / 1000) < parseInt(window.localStorage.getItem('refresh_on'))) {\n                    setToken(window.localStorage.getItem('access_token'))\n                } else {\n                    let data = await fetch('/api/refresh', {\n                        \"method\": \"POST\",\n                        \"body\": {\n                            \"refresh_token\": window.localStorage.getItem('refresh_token')\n                        }\n                    })\n                    window.localStorage.setItem('access_token', data.access_token)\n                    window.localStorage.setItem('refresh_on', data.refresh_on)\n                    setToken(data.access_token)\n                }\n                setGuilds(await fetch('/api/guilds', {\n                    \"method\": \"POST\",\n                    \"body\": {\n                        \"access_token\": token\n                    }\n                }))\n            } else\n\n                console.log(\"Setting Guilds\");\n            setGuilds(mockGuilds);\n        }\n        run()\n    }, []);\n\n    return ( <\n        Providers guild = {\n            guild\n        }\n        setGuild = {\n            setGuild\n        }\n        guilds = {\n            guilds\n        }\n        setGuilds = {\n            setGuilds\n        } >\n        <\n        Sidebar guilds = {\n            guilds\n        }\n        history = {\n            history\n        }\n        /> <\n        Menu title = \"Drinks Bot Menu\"\n        history = {\n            history\n        }\n        /> <Routes / >\n        </Providers>\n    );\n}\n\nfunction Providers({\n    children,\n    guild,\n    setGuild,\n    guilds,\n    setGuilds\n}: any) {\n    return ( <\n        GuildContextProvider value = {\n            {\n                guild,\n                setGuild\n            }\n        } >\n        <\n        GuildStoreContextProvider value = {\n            {\n                guilds,\n                setGuilds\n            }\n        } > {\n            children\n        } <\n        /GuildStoreContextProvider> <\n        /GuildContextProvider>\n    );\n}\n\nfunction Routes() {\n    return ( <\n        Switch >\n        <\n        Redirect path = \"/\"\n        exact = {\n            true\n        }\n        to = \"/dashboard\" / >\n        <\n        Route path = \"/dashboard\"\n        exact = {\n            true\n        }\n        component = {\n            DashboardPage\n        }\n        /> <\n        Route path = \"/dashboard/:guildId\"\n        exact = {\n            true\n        }\n        component = {\n            DashboardPage\n        }\n        /> <\n        Route path = \"/dashboard/:guildId/general/muted\"\n        exact = {\n            true\n        }\n        component = {\n            DashboardPage\n        }\n        /> <\n        /Switch>\n    );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}