{"version":3,"sources":["utils/styles.tsx","utils/constants.tsx","utils/contexts/GuildContext.tsx","components/Menu.tsx","components/Sidebar.tsx","utils/contexts/GuildStoreContext.tsx","__mocks__/index.tsx","components/Input.tsx","components/DropdownMenu.tsx","components/GuildPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/themes.tsx"],"names":["SidebarStyle","styled","aside","theme","base","sidebar","text","main","MenuStyle","menu","BasePageStyle","div","content","IconStyle","BaseHeader","header","height","topContent","SidebarHeader","DashboardHeader","MenuHeader","SidebarContent","padding","GuildIcon","bg","MenuContent","MenuCategory","MenuCategoryItem","section","DropdownHeader","DropdownItemContainer","props","expanded","css","DropdownItem","isSelected","DropdownFooter","footer","Button","button","Input","input","boolOptions","name","value","GuildContext","React","guild","undefined","setGuild","GuildContextProvider","Provider","Menu","guildId","title","history","useContext","onClick","push","id","path","routes","map","item","route","Sidebar","guilds","filter","owner","permissions","icon","startsWith","split","e","className","GuildStoreContextProvider","createContext","setGuilds","TextInput","useRef","type","defaultValue","default","ref","onChange","update","current","BoolDropdown","menuRef","createRef","useState","find","selected","setSelected","setExpanded","search","setSearch","searchResults","setSearchResults","event","currentTarget","filtered","toLowerCase","includes","placeholder","GuildPage","state","prefix","saved","nicknameOnJoin","updateState","data","style","txt","setState","this","a","axios","get","console","log","token","localStorage","getItem","put","headers","Authorization","render","marginRight","disabled","renderGeneral","renderGamertag","Component","Axios","create","baseURL","Providers","children","Routes","exact","component","GuildProps","match","params","App","useHistory","window","location","query","URLSearchParams","has","Math","round","Date","now","parseInt","post","refresh_token","removeItem","setItem","access_token","refresh_on","code","response","status","MockGuilds","servers","href","run","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e35d7ca5.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\r\n\r\nexport const SidebarStyle = styled.aside`\r\n  width: 100px;\r\n  background-color: ${({ theme }) => theme.base.sidebar};\r\n  color: ${({ theme }) => theme.text.main};\r\n  height: 100%;\r\n  font-family: \"Poppins\";\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  overflow: scroll;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const MenuStyle = styled.aside`\r\n  width: 350px;\r\n  background-color: ${({ theme }) => theme.base.menu};\r\n  color: ${({ theme }) => theme.text.main};\r\n  height: 100%;\r\n  font-family: \"Poppins\";\r\n  box-sizing: border-box;\r\n  position: fixed;\r\n  margin-left: 100px;\r\n  overflow: scroll;\r\n  ::-webkit-scrollbar {\r\n    display: none;\r\n  }\r\n`;\r\n\r\nexport const BasePageStyle = styled.div`\r\n  min-height: 100%;\r\n  background-color: ${({ theme }) => theme.base.content};\r\n  color: ${({ theme }) => theme.text.main};\r\n  font-family: \"Poppins\";\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n  margin-left: 450px;\r\n  width: calc(100% - 450px);\r\n`;\r\n\r\nexport const DashboardPageStyle = styled.div``;\r\n\r\nexport const IconStyle = styled.div`\r\n  height: 60px;\r\n  width: 60px;\r\n  background-color: #c4c4c4;\r\n  border-radius: 50px;\r\n`;\r\n\r\n// Headers\r\nexport const BaseHeader = styled.header`\r\n  box-sizing: border-box;\r\n  height: ${({ theme }) => theme.height.topContent};\r\n  box-shadow: 0px 1px 25px 0px rgba(0, 0, 0, 0.25);\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\nexport const SidebarHeader = styled(BaseHeader)`\r\n  justify-content: center;\r\n`;\r\nexport const DashboardHeader = styled(BaseHeader)`\r\n  padding: 25px;\r\n`;\r\nexport const MenuHeader = styled(BaseHeader)`\r\n  padding: 25px;\r\n  position: fixed;\r\n  z-index: 9999;\r\n  background-color: inherit;\r\n  width: 100%;\r\n  :hover {\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const SidebarContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  padding: ${({ theme }) => theme.padding.content};\r\n`;\r\n\r\nexport const GuildIcon = styled(IconStyle)<any>`\r\n  height: 75px;\r\n  width: 75px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  margin: 5px 0px;\r\n  ${({bg,content})=>bg?`background: url(${bg});`:'content:'+content}\r\n  background-color: #36393F;\r\n  background-position: center;\r\n  background-size: 100%;\r\n`;\r\n\r\nexport const MenuContent = styled.div`\r\n  box-sizing: border-box;\r\n  padding: ${({ theme }) => theme.padding.content};\r\n  margin-top: 100px;\r\n`;\r\n\r\nexport const MenuCategory = styled.div`\r\n  box-sizing: border-box;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  :nth-child(2) {\r\n    margin: 20px 0px;\r\n  }\r\n  span {\r\n    padding: 0px 20px;\r\n  }\r\n`;\r\nexport const MenuCategoryItem = styled.section`\r\n  font-size: 22px;\r\n  font-weight: lighter;\r\n  padding: 5px 0px;\r\n  transition: 100ms background-color;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #42494c;\r\n  }\r\n  span {\r\n    padding: 0px 20px;\r\n  }\r\n`;\r\n\r\nexport const DropdownHeader = styled.div`\r\n  background-color: #21262d;\r\n  padding: 8px 20px;\r\n  border-radius: 5px;\r\n  font-size: 16px;\r\n  font-weight: bold;\r\n  border-bottom: 0.5px solid rgba(255, 255, 255, 0.1);\r\n  display: flex;\r\n  justify-content: space-between;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const DropdownItemContainer = styled.div<any>`\r\n  max-height: 0px;\r\n  overflow-y: scroll;\r\n  opacity: 0;\r\n  transition: 300ms;\r\n  ::-webkit-scrollbar {\r\n    width: 5px;\r\n  }\r\n  ::-webkit-scrollbar-track {\r\n  }\r\n  ::-webkit-scrollbar-thumb {\r\n    background-color: #171717;\r\n    border-radius: 50px;\r\n  }\r\n  ${(props) =>\r\n    props.expanded\r\n      ? css`\r\n          max-height: 220px;\r\n          opacity: 1;\r\n        `\r\n      : css`\r\n          max-height: 0px;\r\n\r\n          opacity: 0;\r\n        `}\r\n`;\r\n\r\nexport const DropdownItem = styled.div<any>`\r\n  background-color: #21262d;\r\n  color: white;\r\n  border-bottom: 0.5px solid rgba(255, 255, 255, 0.1);\r\n  padding: 5px 20px;\r\n  :hover {\r\n    background-color: #545d6b;\r\n    cursor: pointer;\r\n  }\r\n  ${(props) =>\r\n    props.isSelected &&\r\n    css`\r\n      background-color: #2e2e2e;\r\n    `}\r\n`;\r\n\r\nexport const DropdownFooter = styled.footer`\r\n  background-color: #21262d;\r\n  padding: 8px 20px;\r\n  border-bottom-left-radius: 5px;\r\n  border-bottom-right-radius: 5px;\r\n  max-height: 42px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  font-family: \"Poppins\";\r\n  padding: 5px 12px;\r\n  background-color: inherit;\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  outline: none;\r\n  color: white;\r\n  border-radius: 5px;\r\n  transition: 100ms;\r\n  :hover {\r\n    cursor: pointer;\r\n    background-color: #4a4a4a;\r\n  }\r\n  :active {\r\n    background-color: #262626;\r\n  }\r\n  :disabled {\r\n    background-color: #919191;\r\n    border: none;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  font-family: \"Poppins\";\r\n  outline: none;\r\n  border: 1px solid rgba(255, 255, 255, 0.15);\r\n  padding: 4px 8px;\r\n  border-radius: 5px;\r\n  background-color: inherit;\r\n  color: white;\r\n`;\r\n","import { MenuGroup, MenuItem, BoolMenu } from \"./types\";\r\n\r\nexport const menuItems = (guildId: string): MenuGroup[] => [\r\n  // {\r\n  //   name: \"Security\",\r\n  //   path: \"/security\",\r\n  //   routes: [\r\n  //     {\r\n  //       name: \"Authentication\",\r\n  //       path: `/dashboard/${guildId}/security/authentication`,\r\n  //     },\r\n  //     {\r\n  //       name: \"Roles\",\r\n  //       path: `/dashboard/${guildId}/security/roles`,\r\n  //     },\r\n  //   ],\r\n  // },\r\n  {\r\n    name: \"General\",\r\n    path: \"/general\",\r\n    routes: [\r\n      {\r\n        name: \"General\",\r\n        path: `/dashboard/${guildId}/general/`,\r\n      },\r\n    ],\r\n  }, {\r\n    name: \"Gamertag\",\r\n    path: \"/gamertag\",\r\n    routes: [\r\n      {\r\n        name: \"Gamertag\",\r\n        path: `/dashboard/${guildId}/gamertag/`,\r\n      },\r\n    ],\r\n  },\r\n  // {\r\n  //   name: \"Miscellaneous\",\r\n  //   path: \"/miscellaneous\",\r\n  //   routes: [\r\n  //     {\r\n  //       name: \"Commands\",\r\n  //       path: `/dashboard/${guildId}/miscellaneous/fun-commands`,\r\n  //     },\r\n  //     {\r\n  //       name: \"Levels\",\r\n  //       path: `/dashboard/${guildId}/miscellaneous/levels`,\r\n  //     },\r\n  //   ],\r\n  // },\r\n];\r\n\r\nexport const boolOptions: BoolMenu[] = [\r\n  { name: \"Yes\", value: true },\r\n  { name: \"No\", value: false },\r\n];\r\nexport const selectMenuItems: MenuItem[] = [\r\n  { name: \"Developer\", value: \"developer\" },\r\n  { name: \"Moderator\", value: \"moderator\" },\r\n  { name: \"Guest\", value: \"guest\" },\r\n  { name: \"React\", value: \"react\" },\r\n  { name: \"Angular\", value: \"angular\" },\r\n  { name: \"Node\", value: \"node\" },\r\n  { name: \"Java\", value: \"java\" },\r\n];\r\n","import * as React from \"react\";\r\nimport { Guild } from \"../types\";\r\n\r\ntype GuildContextType = {\r\n  guild?: Guild;\r\n  setGuild: Function;\r\n};\r\n\r\nconst GuildContext = React.createContext<GuildContextType>({\r\n  guild: undefined,\r\n  setGuild: () => {},\r\n});\r\n\r\nexport const GuildContextProvider = GuildContext.Provider;\r\n\r\nexport default GuildContext;\r\n","import * as React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport {\r\n  MenuStyle,\r\n  MenuHeader,\r\n  MenuContent,\r\n  MenuCategory,\r\n  MenuCategoryItem,\r\n} from \"../utils/styles\";\r\nimport { menuItems } from \"../utils/constants\";\r\nimport { History } from \"history\";\r\nimport GuildContext from \"../utils/contexts/GuildContext\";\r\n\r\ntype MenuProps = {\r\n  title: string;\r\n  history: History;\r\n};\r\n\r\nexport const Menu = ({ title, history }: MenuProps) => {\r\n  const { guild } = useContext(GuildContext);\r\n  if (!guild)\r\n    return (\r\n      <MenuStyle>\r\n        <MenuHeader>Please Select a Guild</MenuHeader>\r\n      </MenuStyle>\r\n    );\r\n\r\n  return (\r\n    <MenuStyle>\r\n      <MenuHeader onClick={() => history.push(`/dashboard/${guild.id}`)}>\r\n        {title}\r\n      </MenuHeader>\r\n      <MenuContent>\r\n        {menuItems(guild.id).map((item) => (\r\n          <MenuCategory key={item.name}>\r\n            <span>{item.name}</span>\r\n            {item.routes.map((route) => (\r\n              <MenuCategoryItem\r\n                key={route.name}\r\n                onClick={() => history.push(route.path)}\r\n              >\r\n                <span># {route.name}</span>\r\n              </MenuCategoryItem>\r\n            ))}\r\n          </MenuCategory>\r\n        ))}\r\n      </MenuContent>\r\n    </MenuStyle>\r\n  );\r\n};\r\n","import * as React from \"react\";\r\nimport { useContext } from \"react\";\r\nimport GuildContext from \"../utils/contexts/GuildContext\";\r\nimport {\r\n  SidebarStyle,\r\n  SidebarHeader,\r\n  IconStyle,\r\n  SidebarContent,\r\n  GuildIcon,\r\n} from \"../utils/styles\";\r\nimport { Guild } from \"../utils/types\";\r\nimport { History } from \"history\";\r\n\r\ntype SidebarProps = {\r\n  guilds: Guild[];\r\n  history: History;\r\n};\r\n\r\nexport const Sidebar = (props: SidebarProps) => {\r\n  const { setGuild } = useContext(GuildContext);\r\n  return (\r\n    <SidebarStyle>\r\n      <SidebarHeader>\r\n        <IconStyle />\r\n      </SidebarHeader>\r\n      <SidebarContent>\r\n        {props.guilds.filter(guild=>guild.owner || guild.permissions===\"1099511627775\").map((guild) => (\r\n          <GuildIcon        \r\n             bg={guild.icon ? 'https://cdn.discordapp.com/icons/' + guild.id + '/' + guild.icon+(guild.icon.startsWith('a_') ? '.gif' : '.png') : null}\r\n            content={guild.name.split(' ').map(e=>e[0])}\r\n            className=\"guild-icon\"\r\n            key={guild.id}\r\n            onClick={() => {\r\n              setGuild(guild);\r\n             // console.log(guild.icon);\r\n              props.history.push(`/dashboard/${guild.id}`);\r\n            }}\r\n          >\r\n            {guild.icon ? '' : <p>{guild.name.split(' ').map(e=>e[0])}</p>}\r\n          </GuildIcon>\r\n        ))}\r\n      </SidebarContent>\r\n    </SidebarStyle>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\nimport { Guild } from \"../types\";\r\n\r\ntype GuildStoreContextType = {\r\n  guilds: Guild[];\r\n  setGuilds: Function;\r\n};\r\n\r\nexport const GuildStoreContext = createContext<GuildStoreContextType>({\r\n  guilds: [],\r\n  setGuilds: (guilds: Guild[]) => {},\r\n});\r\n\r\nexport const GuildStoreContextProvider = GuildStoreContext.Provider;\r\n","import { Guild } from \"../utils/types\";\r\n\r\nexport const guilds: Guild[] = [\r\n  {\r\n    id: \"123\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"124\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"125\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"126\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"127\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"128\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"129\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"130\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"131\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"132\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"133\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"134\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"135\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"136\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"137\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n  {\r\n    id: \"138\",\r\n    name: \"Developers\",\r\n    icon: \"\",\r\n  },\r\n];\r\n","import React, { useRef} from \"react\"\r\ninterface TextProps {\r\n  title: string;\r\n  guild: any;\r\n  default: string\r\n  update: any\r\n}\r\n\r\n\r\nexport function TextInput(props: TextProps) {\r\nconst input = useRef<HTMLInputElement>(null);\r\n  return   <div>\r\n    <input type=\"text\" defaultValue={props.default} ref={input} onChange={()=>props.update(input?.current?.value || props.default)} />\r\n    </div>\r\n}","import * as React from \"react\";\r\nimport { createRef, useState } from \"react\";\r\nimport {\r\n  Button,\r\n  DropdownFooter,\r\n  DropdownHeader,\r\n  DropdownItem,\r\n  DropdownItemContainer,\r\n  Input,\r\n} from \"../utils/styles\";\r\nimport { boolOptions } from \"../utils/constants\";\r\nimport { MenuItem, BoolMenu } from \"../utils/types\";\r\n\r\ntype Props = {\r\n  title: string;\r\n  items: MenuItem[];\r\n  guild: any\r\n  update: any\r\n};\r\n\r\nexport const DropdownMenu = ({ title, items,guild, update }: Props) => {\r\n  const menuRef = createRef<HTMLDivElement>();\r\n  const [selected, setSelected] = useState<MenuItem | undefined>();\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [searchResults, setSearchResults] = useState<MenuItem[]>(items);\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const { value } = event.currentTarget;\r\n    setSearch(value);\r\n    const filtered = items.filter((item) =>\r\n      item.name.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setSearchResults(filtered);\r\n  };\r\n\r\n  const resetState = () => {\r\n    setExpanded(false);\r\n    setSearchResults(items);\r\n    setSelected(undefined);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DropdownHeader onClick={() => setExpanded(!expanded)}>\r\n        <p>{title}</p>\r\n        <p>{selected && selected.name}</p>\r\n      </DropdownHeader>\r\n      <DropdownItemContainer ref={menuRef} expanded={expanded}>\r\n        {searchResults.map((item) => (\r\n          <DropdownItem\r\n            key={item.value}\r\n            onClick={() => setSelected(item)}\r\n            isSelected={selected && item.value === selected.value}\r\n          >\r\n            {item.name}\r\n          </DropdownItem>\r\n        ))}\r\n      </DropdownItemContainer>\r\n      {expanded && (\r\n        <DropdownFooter>\r\n          <div>\r\n            <Button style={{ marginRight: \"5px\" }} disabled={!selected} onClick={()=>update(selected,title,guild)}>\r\n              Save\r\n            </Button>\r\n            <Button onClick={resetState}>Collapse</Button>\r\n          </div>\r\n          <div>\r\n            <Input\r\n              onChange={handleChange}\r\n              value={search}\r\n              placeholder=\"Search\"\r\n            />\r\n          </div>\r\n        </DropdownFooter>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\ninterface BoolProps {\r\n  title: string\r\n  guild: any\r\n  current: boolean\r\n  update:any\r\n}\r\n\r\nexport const BoolDropdown = ({ title,guild, update, current }: BoolProps) => {\r\n  const menuRef = createRef<HTMLDivElement>();\r\n  const [selected, setSelected] = useState<BoolMenu | undefined>(boolOptions.find(e=>e.value===current));\r\n  const [expanded, setExpanded] = useState<boolean>(false);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n  const [searchResults, setSearchResults] = useState<BoolMenu[]>(boolOptions);\r\n\r\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\r\n    const { value } = event.currentTarget;\r\n    setSearch(value);\r\n    const filtered = boolOptions.filter((item) =>\r\n      item.name.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n    setSearchResults(filtered);\r\n  };\r\n\r\n  const resetState = () => {\r\n    setExpanded(false);\r\n    setSearchResults(boolOptions);\r\n    setSelected(undefined);\r\n    setSearch(\"\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <DropdownHeader onClick={() => setExpanded(!expanded)}>\r\n        <p>{title}</p>\r\n        <p>{selected && selected.name}</p>\r\n      </DropdownHeader>\r\n      <DropdownItemContainer ref={menuRef} expanded={expanded}>\r\n        {searchResults.map((item) => (\r\n          <DropdownItem\r\n            key={item.name}\r\n            onClick={() => {setSelected(item); update(item,guild)}}\r\n            isSelected={selected && item.value === selected.value}\r\n          >\r\n            {item.name}\r\n          </DropdownItem>\r\n        ))}\r\n      </DropdownItemContainer>\r\n      {expanded && (\r\n        <DropdownFooter>\r\n          <div>\r\n            <Button onClick={resetState}>Collapse</Button>\r\n          </div>\r\n          <div>\r\n            <Input\r\n              onChange={handleChange}\r\n              value={search}\r\n              placeholder=\"Search\"\r\n            />\r\n          </div>\r\n        </DropdownFooter>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import { axios } from \"../App\";\r\nimport React from \"react\";\r\nimport { BasePageStyle, DashboardHeader, Button } from \"../utils/styles\";\r\nimport { Guild } from \"../utils/types\";\r\nimport { TextInput } from \"./Input\";\r\nimport {BoolDropdown} from \"./DropdownMenu\"\r\n\r\ninterface GuildProps {\r\n    guild: Guild | undefined \r\n    route: any;\r\n}\r\n\r\ninterface GuildState {\r\n    id: string | undefined;\r\n    saved: boolean\r\n    prefix:string | null;\r\n    nicknameOnJoin: boolean\r\n}\r\n\r\nexport default class GuildPage extends React.Component {\r\n    state: GuildState;\r\n    constructor(public props: GuildProps) {\r\n        super(props)\r\n       \r\n        this.state = {\r\n            id: props?.guild?.id,\r\n            prefix:null,\r\n            saved: true,\r\n            nicknameOnJoin: true\r\n        }\r\n         if(props.guild) this.updateState()\r\n\r\n    }\r\n    setState(data: any) {\r\n        data.saved = false\r\n        super.setState(data)\r\n        \r\n    }\r\n    renderGeneral() {\r\n        return   <div>\r\n        <DashboardHeader>General</DashboardHeader>\r\n        <div style={{ padding: \"20px\" }}>\r\n          <TextInput update={(txt: string)=>this.setState({prefix:txt})} title=\"Prefix\" default={this.state.prefix ?? \"\"} guild={this.state}/>\r\n        </div>\r\n        </div>\r\n    }\r\n    renderGamertag() {\r\n        return   <div>\r\n        <DashboardHeader>Gamertag</DashboardHeader>\r\n        <div style={{ padding: \"20px\" }}>\r\n          <BoolDropdown title=\"Set nickname to registered IGN on join\" guild={this.state} current={this.state.nicknameOnJoin} update={(selected:any,title:string,guild:any)=>this.setState({nicknameOnJoin: selected.value})} />\r\n        </div>\r\n        </div>\r\n    }\r\n    async updateState() {\r\n       let data = await axios.get(\"/api/guild/\"+this.state.id+\"/config\")\r\n       console.log(data)\r\n    }\r\n    update() {\r\n        let token = localStorage.getItem(\"access_token\");\r\n        if(!token) return\r\n        axios.put(\"/api/guild/\"+this.state.id+\"/config\", this.state, {\r\n            headers: {\r\n                Authorization: token\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n\r\n        const render = (data: any) => {\r\n            if(!this.state.saved) return  <BasePageStyle>\r\n            {data}\r\n            <Button style={{ marginRight: \"5px\" }} disabled={this.state.saved} onClick={()=>this.update()}>\r\n            Save\r\n          </Button></BasePageStyle>\r\n          else return <BasePageStyle>\r\n        {data}</BasePageStyle>\r\n        }\r\n        if(!this.props.guild) return render(<p>Could not find guild</p>)\r\n        if(this.props.route === \"general\") return render(this.renderGeneral())\r\n        if(this.props.route === \"gamertag\") return render(this.renderGamertag())\r\n       return render(<div></div>)\r\n    }\r\n}","\r\nimport * as React from \"react\";\r\nimport { Switch, Route, useHistory } from \"react-router-dom\";\r\nimport { Menu } from \"./components/Menu\";\r\nimport { Sidebar } from \"./components/Sidebar\";\r\nimport { GuildContextProvider } from \"./utils/contexts/GuildContext\";\r\nimport { GuildStoreContextProvider } from \"./utils/contexts/GuildStoreContext\";\r\nimport { Guild } from \"./utils/types\";\r\nimport {guilds as MockGuilds} from \"./__mocks__\"\r\nimport Axios, {AxiosResponse} from 'axios'\r\nimport GuildPage from \"./components/GuildPage\";\r\nexport const axios = Axios.create({\r\n  baseURL: 'https://public-bot.shadowsniper784.repl.co'\r\n})\r\nfunction App() {\r\n  const [guild, setGuild] = React.useState<Guild | undefined>();\r\n  const [guilds, setGuilds] = React.useState<Guild[]>([]);\r\n  const history = useHistory();\r\n\r\n   //const { loading, error } = useQuery(getUser, {\r\n   // onCompleted: ({ getUser }) => {\r\n   //   const { guilds } = getUser;\r\n  //     setGuilds(guilds);\r\n  //   },\r\n  // });\r\n\r\n  // console.log(error);\r\n\r\n  // if (loading) return <h1>Loading</h1>;\r\n  // if (error) return <h1>You are making too many requests.</h1>;\r\n  React.useEffect(() => {\r\n  \r\n    async function run() {\r\n   \r\n    let search = window.location.search;\r\nlet query = new URLSearchParams(search)\r\n    if(query.has('code') || \r\n       (\r\n         window.localStorage.getItem('access_token') && \r\n         window.localStorage.getItem('refresh_on') &&\r\n         Math.round(Date.now() / 1000) < parseInt(window.localStorage.getItem('refresh_on')!)\r\n       ) || \r\n       window.localStorage.getItem('refresh_token')) {\r\n  if(window.localStorage.getItem('access_token') && window.localStorage.getItem('refresh_on') && Date.now() < parseInt(window.localStorage.getItem('refresh_on')!)) {\r\n        console.log('No request needed access token: %s',window.localStorage.getItem('access_token'))\r\n        \r\n      } else if(localStorage.getItem('refresh_token')) {\r\n        let data:any = await axios.post('/api/refresh',{\r\n          refresh_token:window.localStorage.getItem('refresh_token')\r\n        })\r\n        console.log('Request now %o',data)\r\n        data=data.data\r\n        window.localStorage.removeItem(\"refresh_token\")\r\n        window.localStorage.setItem('access_token',data.access_token)\r\n        window.localStorage.setItem('refresh_on',data.refresh_on)\r\n        \r\n      }else    if(query.has('code')) {\r\n        console.log('Has code: %s',query.get('code'))\r\n        let response: AxiosResponse<Response>  = await axios.get('/api/access',{\r\n          params:{\r\n           code: query.get('code')\r\n        }\r\n      })\r\n      if(response.status === 400) return setGuilds(MockGuilds)\r\n        console.log('Request finished: %o', response)\r\n        let data: any = response.data\r\n  \r\n        window.localStorage.setItem('access_token',data.access_token)\r\n        window.localStorage.setItem('refresh_on',data.refresh_on)\r\n        window.localStorage.setItem('refresh_token',data.refresh_token)\r\n      \r\n      }\r\n              console.log('Getting guilds: %s', window.localStorage.getItem('access_token'))\r\n      let servers: any = await axios.post('/api/guilds',{access_token:window.localStorage.getItem('access_token') })\r\n              console.log('Request finished: %o', servers)\r\n      setGuilds(servers.data)\r\n    } else {\r\n      console.log(\"dd\")\r\n          window.location.href = 'https://public-bot.shadowsniper784.repl.co/api/login' \r\n  //  setGuilds([])\r\n    }\r\n    }\r\n    run()\r\n  }, []);\r\n  if(!guilds[0]) return <p>Loading Guilds or no user guilds...</p>\r\n  return (\r\n    <Providers\r\n      guild={guild}\r\n      setGuild={setGuild}\r\n      guilds={guilds}\r\n      setGuilds={setGuilds}\r\n    >\r\n        <Routes\r\n         guild={guild}\r\n      setGuild={setGuild}\r\n      guilds={guilds}\r\n      setGuilds={setGuilds} \r\n      history={history}\r\n      />\r\n      <Sidebar guilds={guilds} history={history} />\r\n      <Menu title={guild ? guild.name : 'Shadow Public'} history={history} />\r\n    </Providers>\r\n  );\r\n}\r\n\r\nfunction Providers({ children, guild, setGuild, guilds, setGuilds }: any) {\r\n  \r\n  return (\r\n    <GuildContextProvider value={{ guild, setGuild }}>\r\n      <GuildStoreContextProvider value={{ guilds, setGuilds }}>\r\n        {children}\r\n      </GuildStoreContextProvider>\r\n    </GuildContextProvider>\r\n  );\r\n}\r\n\r\ninterface RoutesProps {\r\n  guild: Guild | undefined,\r\n  setGuild: React.Dispatch<React.SetStateAction<Guild | undefined>>,\r\n  guilds: Guild[],\r\n  setGuilds:  React.Dispatch<React.SetStateAction<Guild[]>>\r\n  history: any\r\n}\r\n\r\nexport function Routes(props: RoutesProps) {\r\n  return (\r\n    <Switch>\r\n      <Route path=\"/\" exact={true} component={()=>  <Providers\r\n      guild={props.guild}\r\n      setGuild={props.setGuild}\r\n      guilds={props.guilds}\r\n      setGuilds={props.setGuilds}\r\n    >\r\n      <Sidebar guilds={props.guilds} history={props.history} />\r\n      <Menu title={props.guild ? props.guild.name : 'Shadow Public'} history={props.history} />\r\n    </Providers>} />\r\n      <Route\r\n        path=\"/dashboard/:guildId\"\r\n        exact={true}\r\n        component={(GuildProps: any)=><GuildPage route=\"general\" guild={props.guilds.find((e:any)=>e.id === GuildProps.match.params.guildId)} />}\r\n      />\r\n      <Route\r\n        path=\"/dashboard/:guildId/general\"\r\n        exact={true}\r\n        component={(GuildProps: any)=><GuildPage route=\"general\" guild={props.guilds.find((e:any)=>e.id === GuildProps.match.params.guildId)} />}\r\n      />\r\n      <Route\r\n        path=\"/dashboard/:guildId/gamertag\"\r\n        exact={true}\r\n        component={(GuildProps: any)=><GuildPage route=\"gamertag\" guild={props.guilds.find((e:any)=>e.id === GuildProps.match.params.guildId)} />}\r\n      />\r\n      \r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n","import { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { DarkTheme } from \"./utils/themes\";\r\nimport \"./index.css\";\r\n// const client = new ApolloClient({\r\n//   uri: \"http://localhost:3001/api/graphql\",\r\n//   cache: new InMemoryCache(),\r\n//   credentials: \"include\",\r\n// });\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <ThemeProvider theme={DarkTheme}>\r\n    \r\n        <App />\r\n      </ThemeProvider>\r\n      {/* <ApolloProvider client={client}>\r\n        <ThemeProvider theme={DarkTheme}>\r\n          <App />\r\n        </ThemeProvider>\r\n      </ApolloProvider> */}\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","export interface Theme {\r\n  base?: any;\r\n  text?: any;\r\n  height?: any;\r\n  padding?: any;\r\n}\r\n\r\nexport const LightTheme: Theme = {};\r\n\r\nexport const DarkTheme: Theme = {\r\n  base: {\r\n    sidebar: \"#202225\",\r\n    menu: \"#2F3136\",\r\n    content: \"#36393F\",\r\n  },\r\n  text: {\r\n    main: \"#FFFFFF\",\r\n  },\r\n  height: {\r\n    topContent: \"95px\",\r\n  },\r\n  padding: {\r\n    content: \"20px 0px\",\r\n  },\r\n};\r\n"],"sourceRoot":""}