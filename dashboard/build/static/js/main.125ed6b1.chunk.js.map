{"version":3,"sources":["utils/styles.tsx","utils/constants.tsx","utils/contexts/GuildContext.tsx","components/Menu.tsx","components/Sidebar.tsx","components/DropdownMenu.tsx","components/Input.tsx","utils/contexts/GuildStoreContext.tsx","pages/Dashboard.tsx","App.tsx","reportWebVitals.ts","index.tsx","utils/themes.tsx"],"names":["SidebarStyle","styled","aside","theme","base","sidebar","text","main","MenuStyle","menu","BasePageStyle","div","content","IconStyle","BaseHeader","header","height","topContent","SidebarHeader","DashboardHeader","MenuHeader","SidebarContent","padding","GuildIcon","bg","MenuContent","MenuCategory","MenuCategoryItem","section","DropdownHeader","DropdownItemContainer","props","expanded","css","DropdownItem","isSelected","DropdownFooter","footer","Button","button","Input","input","selectMenuItems","name","value","GuildContext","React","guild","undefined","setGuild","GuildContextProvider","Provider","Menu","guildId","title","history","useContext","onClick","push","id","path","routes","map","item","route","Sidebar","guilds","filter","owner","permissions","icon","startsWith","split","e","className","DropdownMenu","items","menuRef","createRef","useState","selected","setSelected","setExpanded","search","setSearch","searchResults","setSearchResults","ref","style","marginRight","disabled","axios","put","update","onChange","event","currentTarget","filtered","toLowerCase","includes","placeholder","TextInput","useRef","default","setText","type","defaultValue","current","GuildStoreContext","createContext","setGuilds","GuildStoreContextProvider","DashboardPage","match","params","useEffect","findGuild","find","g","margin","Providers","children","Routes","exact","component","App","setToken","useHistory","a","create","baseURL","window","location","query","URLSearchParams","has","localStorage","getItem","Math","round","Date","now","parseInt","console","log","post","refresh_token","data","setItem","access_token","refresh_on","get","code","servers","href","run","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.125ed6b1.chunk.js","sourcesContent":["import styled, { css } from \"styled-components\";\n\nexport const SidebarStyle = styled.aside`\n  width: 100px;\n  background-color: ${({ theme }) => theme.base.sidebar};\n  color: ${({ theme }) => theme.text.main};\n  height: 100%;\n  font-family: \"Poppins\";\n  box-sizing: border-box;\n  position: fixed;\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const MenuStyle = styled.aside`\n  width: 350px;\n  background-color: ${({ theme }) => theme.base.menu};\n  color: ${({ theme }) => theme.text.main};\n  height: 100%;\n  font-family: \"Poppins\";\n  box-sizing: border-box;\n  position: fixed;\n  margin-left: 100px;\n  overflow: scroll;\n  ::-webkit-scrollbar {\n    display: none;\n  }\n`;\n\nexport const BasePageStyle = styled.div`\n  min-height: 100%;\n  background-color: ${({ theme }) => theme.base.content};\n  color: ${({ theme }) => theme.text.main};\n  font-family: \"Poppins\";\n  box-sizing: border-box;\n  position: absolute;\n  margin-left: 450px;\n  width: calc(100% - 450px);\n`;\n\nexport const DashboardPageStyle = styled.div``;\n\nexport const IconStyle = styled.div`\n  height: 60px;\n  width: 60px;\n  background-color: #c4c4c4;\n  border-radius: 50px;\n`;\n\n// Headers\nexport const BaseHeader = styled.header`\n  box-sizing: border-box;\n  height: ${({ theme }) => theme.height.topContent};\n  box-shadow: 0px 1px 25px 0px rgba(0, 0, 0, 0.25);\n  display: flex;\n  align-items: center;\n`;\nexport const SidebarHeader = styled(BaseHeader)`\n  justify-content: center;\n`;\nexport const DashboardHeader = styled(BaseHeader)`\n  padding: 25px;\n`;\nexport const MenuHeader = styled(BaseHeader)`\n  padding: 25px;\n  position: fixed;\n  z-index: 9999;\n  background-color: inherit;\n  width: 100%;\n  :hover {\n    cursor: pointer;\n  }\n`;\n\nexport const SidebarContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: ${({ theme }) => theme.padding.content};\n`;\n\nexport const GuildIcon = styled(IconStyle)<any>`\n  height: 75px;\n  width: 75px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 5px 0px;\n  ${({bg,content})=>bg?`background: url(${bg});`:'content:'+content}\n  background-color: #36393F;\n  background-position: center;\n  background-size: 100%;\n`;\n\nexport const MenuContent = styled.div`\n  box-sizing: border-box;\n  padding: ${({ theme }) => theme.padding.content};\n  margin-top: 100px;\n`;\n\nexport const MenuCategory = styled.div`\n  box-sizing: border-box;\n  font-size: 16px;\n  font-weight: bold;\n  :nth-child(2) {\n    margin: 20px 0px;\n  }\n  span {\n    padding: 0px 20px;\n  }\n`;\nexport const MenuCategoryItem = styled.section`\n  font-size: 22px;\n  font-weight: lighter;\n  padding: 5px 0px;\n  transition: 100ms background-color;\n  :hover {\n    cursor: pointer;\n    background-color: #42494c;\n  }\n  span {\n    padding: 0px 20px;\n  }\n`;\n\nexport const DropdownHeader = styled.div`\n  background-color: #21262d;\n  padding: 8px 20px;\n  border-radius: 5px;\n  font-size: 16px;\n  font-weight: bold;\n  border-bottom: 0.5px solid rgba(255, 255, 255, 0.1);\n  display: flex;\n  justify-content: space-between;\n  cursor: pointer;\n`;\n\nexport const DropdownItemContainer = styled.div<any>`\n  max-height: 0px;\n  overflow-y: scroll;\n  opacity: 0;\n  transition: 300ms;\n  ::-webkit-scrollbar {\n    width: 5px;\n  }\n  ::-webkit-scrollbar-track {\n  }\n  ::-webkit-scrollbar-thumb {\n    background-color: #171717;\n    border-radius: 50px;\n  }\n  ${(props) =>\n    props.expanded\n      ? css`\n          max-height: 220px;\n          opacity: 1;\n        `\n      : css`\n          max-height: 0px;\n\n          opacity: 0;\n        `}\n`;\n\nexport const DropdownItem = styled.div<any>`\n  background-color: #21262d;\n  color: white;\n  border-bottom: 0.5px solid rgba(255, 255, 255, 0.1);\n  padding: 5px 20px;\n  :hover {\n    background-color: #545d6b;\n    cursor: pointer;\n  }\n  ${(props) =>\n    props.isSelected &&\n    css`\n      background-color: #2e2e2e;\n    `}\n`;\n\nexport const DropdownFooter = styled.footer`\n  background-color: #21262d;\n  padding: 8px 20px;\n  border-bottom-left-radius: 5px;\n  border-bottom-right-radius: 5px;\n  max-height: 42px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Button = styled.button`\n  font-family: \"Poppins\";\n  padding: 5px 12px;\n  background-color: inherit;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  outline: none;\n  color: white;\n  border-radius: 5px;\n  transition: 100ms;\n  :hover {\n    cursor: pointer;\n    background-color: #4a4a4a;\n  }\n  :active {\n    background-color: #262626;\n  }\n  :disabled {\n    background-color: #919191;\n    border: none;\n  }\n`;\n\nexport const Input = styled.input`\n  font-family: \"Poppins\";\n  outline: none;\n  border: 1px solid rgba(255, 255, 255, 0.15);\n  padding: 4px 8px;\n  border-radius: 5px;\n  background-color: inherit;\n  color: white;\n`;\n","import { MenuGroup, MenuItem } from \"./types\";\n\nexport const menuItems = (guildId: string): MenuGroup[] => [\n  {\n    name: \"Security\",\n    path: \"/security\",\n    routes: [\n      {\n        name: \"Authentication\",\n        path: `/dashboard/${guildId}/security/authentication`,\n      },\n      {\n        name: \"Roles\",\n        path: `/dashboard/${guildId}/security/roles`,\n      },\n    ],\n  },\n  {\n    name: \"General\",\n    path: \"/general\",\n    routes: [\n      {\n        name: \"General\",\n        path: `/dashboard/${guildId}/general/`,\n      },\n    ],\n  },\n  {\n    name: \"Miscellaneous\",\n    path: \"/miscellaneous\",\n    routes: [\n      {\n        name: \"Commands\",\n        path: `/dashboard/${guildId}/miscellaneous/fun-commands`,\n      },\n      {\n        name: \"Levels\",\n        path: `/dashboard/${guildId}/miscellaneous/levels`,\n      },\n    ],\n  },\n];\n\nexport const selectMenuItems: MenuItem[] = [\n  { name: \"Developer\", value: \"developer\" },\n  { name: \"Moderator\", value: \"moderator\" },\n  { name: \"Guest\", value: \"guest\" },\n  { name: \"React\", value: \"react\" },\n  { name: \"Angular\", value: \"angular\" },\n  { name: \"Node\", value: \"node\" },\n  { name: \"Java\", value: \"java\" },\n];\n","import * as React from \"react\";\nimport { Guild } from \"../types\";\n\ntype GuildContextType = {\n  guild?: Guild;\n  setGuild: Function;\n};\n\nconst GuildContext = React.createContext<GuildContextType>({\n  guild: undefined,\n  setGuild: () => {},\n});\n\nexport const GuildContextProvider = GuildContext.Provider;\n\nexport default GuildContext;\n","import * as React from \"react\";\nimport { useContext } from \"react\";\nimport {\n  MenuStyle,\n  MenuHeader,\n  MenuContent,\n  MenuCategory,\n  MenuCategoryItem,\n} from \"../utils/styles\";\nimport { menuItems } from \"../utils/constants\";\nimport { History } from \"history\";\nimport GuildContext from \"../utils/contexts/GuildContext\";\n\ntype MenuProps = {\n  title: string;\n  history: History;\n};\n\nexport const Menu = ({ title, history }: MenuProps) => {\n  const { guild } = useContext(GuildContext);\n  if (!guild)\n    return (\n      <MenuStyle>\n        <MenuHeader>Please Select a Guild</MenuHeader>\n      </MenuStyle>\n    );\n\n  return (\n    <MenuStyle>\n      <MenuHeader onClick={() => history.push(`/dashboard/${guild.id}`)}>\n        {title}\n      </MenuHeader>\n      <MenuContent>\n        {menuItems(guild.id).map((item) => (\n          <MenuCategory key={item.name}>\n            <span>{item.name}</span>\n            {item.routes.map((route) => (\n              <MenuCategoryItem\n                key={route.name}\n                onClick={() => history.push(route.path)}\n              >\n                <span># {route.name}</span>\n              </MenuCategoryItem>\n            ))}\n          </MenuCategory>\n        ))}\n      </MenuContent>\n    </MenuStyle>\n  );\n};\n","import * as React from \"react\";\nimport { useContext } from \"react\";\nimport GuildContext from \"../utils/contexts/GuildContext\";\nimport {\n  SidebarStyle,\n  SidebarHeader,\n  IconStyle,\n  SidebarContent,\n  GuildIcon,\n} from \"../utils/styles\";\nimport { Guild } from \"../utils/types\";\nimport { History } from \"history\";\n\ntype SidebarProps = {\n  guilds: Guild[];\n  history: History;\n};\n\nexport const Sidebar = (props: SidebarProps) => {\n  const { setGuild } = useContext(GuildContext);\n  return (\n    <SidebarStyle>\n      <SidebarHeader>\n        <IconStyle />\n      </SidebarHeader>\n      <SidebarContent>\n        {props.guilds.filter(guild=>guild.owner || guild.permissions===\"1099511627775\").map((guild) => (\n          <GuildIcon        \n             bg={guild.icon ? 'https://cdn.discordapp.com/icons/' + guild.id + '/' + guild.icon+(guild.icon.startsWith('a_') ? '.gif' : '.png') : null}\n            content={guild.name.split(' ').map(e=>e[0])}\n            className=\"guild-icon\"\n            key={guild.id}\n            onClick={() => {\n              setGuild(guild);\n             // console.log(guild.icon);\n              props.history.push(`/dashboard/${guild.id}`);\n            }}\n          >\n            {guild.icon ? '' : <p>{guild.name.split(' ').map(e=>e[0])}</p>}\n          </GuildIcon>\n        ))}\n      </SidebarContent>\n    </SidebarStyle>\n  );\n};\n","import * as React from \"react\";\nimport { createRef, useState } from \"react\";\nimport {\n  Button,\n  DropdownFooter,\n  DropdownHeader,\n  DropdownItem,\n  DropdownItemContainer,\n  Input,\n} from \"../utils/styles\";\nimport { MenuItem } from \"../utils/types\";\nimport axios from 'axios'\n\ntype Props = {\n  title: string;\n  items: MenuItem[];\n  guild: any\n};\nfunction update(selected:MenuItem|undefined,title:string,guild:any) {\n  if(!selected) return\n    axios.put('/api/guild/'+guild.id+'/config',{title,value: selected.value!})\n}\nexport const DropdownMenu = ({ title, items,guild }: Props) => {\n  const menuRef = createRef<HTMLDivElement>();\n  const [selected, setSelected] = useState<MenuItem | undefined>();\n  const [expanded, setExpanded] = useState<boolean>(false);\n  const [search, setSearch] = useState<string>(\"\");\n  const [searchResults, setSearchResults] = useState<MenuItem[]>(items);\n\n  const handleChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const { value } = event.currentTarget;\n    setSearch(value);\n    const filtered = items.filter((item) =>\n      item.name.toLowerCase().includes(value.toLowerCase())\n    );\n    setSearchResults(filtered);\n  };\n\n  const resetState = () => {\n    setExpanded(false);\n    setSearchResults(items);\n    setSelected(undefined);\n    setSearch(\"\");\n  };\n\n  return (\n    <div>\n      <DropdownHeader onClick={() => setExpanded(!expanded)}>\n        <p>{title}</p>\n        <p>{selected && selected.name}</p>\n      </DropdownHeader>\n      <DropdownItemContainer ref={menuRef} expanded={expanded}>\n        {searchResults.map((item) => (\n          <DropdownItem\n            key={item.value}\n            onClick={() => setSelected(item)}\n            isSelected={selected && item.value === selected.value}\n          >\n            {item.name}\n          </DropdownItem>\n        ))}\n      </DropdownItemContainer>\n      {expanded && (\n        <DropdownFooter>\n          <div>\n            <Button style={{ marginRight: \"5px\" }} disabled={!selected} onClick={()=>update(selected,title,guild)}>\n              Save\n            </Button>\n            <Button onClick={resetState}>Collapse</Button>\n          </div>\n          <div>\n            <Input\n              onChange={handleChange}\n              value={search}\n              placeholder=\"Search\"\n            />\n          </div>\n        </DropdownFooter>\n      )}\n    </div>\n  );\n};\n","import React, {Component, useState, useRef} from \"react\"\nimport {Guild} from '../utils/types'\nimport axios from 'axios'\nimport {\n  Button,\n  DropdownFooter,\n  DropdownHeader,\n  DropdownItem,\n  DropdownItemContainer,\n  Input,\n} from \"../utils/styles\";\ninterface TextProps {\n  title: string;\n  guild: any;\n  default: string\n}\nfunction update(text:string,title:string,guild:any) {\n  axios.put('/api/guild/'+guild.id+'/config',{title,value:text})\n}\n\nexport function TextInput(props: TextProps) {\nconst input = useRef<HTMLInputElement>(null);\n  const [text,setText]=useState(props.default)\n  return   <div>\n    <input type=\"text\" defaultValue={props.default} ref={input} onChange={()=>setText(input?.current?.value || props.default)} />\n    <Button style={{ marginRight: \"5px\" }} onClick={()=>update(text,props.title,props.guild)}>\n              Save\n            </Button></div>\n}","import { createContext } from \"react\";\nimport { Guild } from \"../types\";\n\ntype GuildStoreContextType = {\n  guilds: Guild[];\n  setGuilds: Function;\n};\n\nexport const GuildStoreContext = createContext<GuildStoreContextType>({\n  guilds: [],\n  setGuilds: (guilds: Guild[]) => {},\n});\n\nexport const GuildStoreContextProvider = GuildStoreContext.Provider;\n","import * as React from \"react\";\nimport { useContext, useEffect } from \"react\";\nimport { DropdownMenu } from \"../components/DropdownMenu\";\nimport { TextInput } from '../components/Input'\nimport { selectMenuItems } from \"../utils/constants\";\nimport GuildContext from \"../utils/contexts/GuildContext\";\nimport { GuildStoreContext } from \"../utils/contexts/GuildStoreContext\";\nimport { DashboardHeader, BasePageStyle } from \"../utils/styles\";\n\n\ntype DashboardProps = {\n  match?: any;\n};\n\nexport const DashboardPage = (props: DashboardProps) => {\n  const { guildId } = props.match.params;\n  const { guild, setGuild } = useContext(GuildContext);\n  const { guilds } = useContext(GuildStoreContext);\n\n  useEffect(() => {\n    const findGuild = guilds.find((g) => g.id === guildId);\n    setGuild(findGuild);\n  });\n\n  if (!guild)\n    return (\n      <BasePageStyle>\n        <DashboardHeader>Please Select a Guild</DashboardHeader>\n      </BasePageStyle>\n    );\n  return (\n    <BasePageStyle>\n      <DashboardHeader>General</DashboardHeader>\n      <div style={{ padding: \"20px\" }}>\n        <TextInput title=\"Prefix\" default=\".\" guild={guild}/>\n        <DropdownMenu guild={guild} title=\"Update Default Role\" items={selectMenuItems} />\n        <div style={{ margin: \"2.5px 0px\" }} />\n        <DropdownMenu guild={guild} title=\"Update Moderator Role\" items={selectMenuItems} />\n        <div style={{ margin: \"2.5px 0px\" }} />\n        <DropdownMenu guild={guild} title=\"Update Muted Role\" items={selectMenuItems} />\n        <div style={{ margin: \"2.5px 0px\" }} />\n      </div>\n    </BasePageStyle>\n  );\n};\n","\nimport * as React from \"react\";\nimport { Switch, Route, Redirect, useHistory } from \"react-router-dom\";\nimport { Menu } from \"./components/Menu\";\nimport { Sidebar } from \"./components/Sidebar\";\nimport { DashboardPage } from \"./pages/Dashboard\";\nimport { GuildContextProvider } from \"./utils/contexts/GuildContext\";\nimport { GuildStoreContextProvider } from \"./utils/contexts/GuildStoreContext\";\nimport { Guild } from \"./utils/types\";\nimport { useQuery } from \"@apollo/client\";\nimport { getUser } from \"./graphql\";\nimport { guilds as mockGuilds } from \"./__mocks__\";\nimport axios from 'axios'\n\nfunction App() {\n  const [guild, setGuild] = React.useState<Guild | undefined>();\n  const [guilds, setGuilds] = React.useState<Guild[]>([]);\n  const [token, setToken] = React.useState<any>()\n  const history = useHistory();\n\n   //const { loading, error } = useQuery(getUser, {\n   // onCompleted: ({ getUser }) => {\n   //   const { guilds } = getUser;\n  //     setGuilds(guilds);\n  //   },\n  // });\n\n  // console.log(error);\n\n  // if (loading) return <h1>Loading</h1>;\n  // if (error) return <h1>You are making too many requests.</h1>;\n  React.useEffect(() => {\n  \n    async function run() {\n      const inst = axios.create({\n  baseURL: 'https://public.shadowsniper784.repl.co'\n})\n    let search = window.location.search;\nlet query = new URLSearchParams(search)\n    if(query.has('code') || \n       (\n         window.localStorage.getItem('access_token') && \n         window.localStorage.getItem('refresh_on') &&\n         Math.round(Date.now() / 1000) < parseInt(window.localStorage.getItem('refresh_on')!)\n       ) || \n       window.localStorage.getItem('refresh_token')) {\n  if(window.localStorage.getItem('access_token') && window.localStorage.getItem('refresh_on') && Date.now() < parseInt(window.localStorage.getItem('refresh_on')!)) {\n        console.log('No request needed access token: %s',window.localStorage.getItem('access_token'))\n        setToken(window.localStorage.getItem('access_token')!)\n      } else if(localStorage.getItem('refresh_token')) {\n        let data:any = await axios.post('/api/refresh',{\n          refresh_token:window.localStorage.getItem('refresh_token')\n        })\n        console.log('Request now %o',data)\n        data=data.data\n\n         window.localStorage.setItem('access_token',data.access_token)\n        window.localStorage.setItem('refresh_on',data.refresh_on)\n        setToken(data.access_token)\n      }else    if(query.has('code')) {\n        console.log('Has code: %s',query.get('code'))\n        let data: any = await axios.get('/api/access',{\n          params:{\n           code: query.get('code')\n        }\n      })\n        console.log('Request finished: %o', data)\n        data = data.data\n  \n        window.localStorage.setItem('access_token',data.access_token)\n        window.localStorage.setItem('refresh_on',data.refresh_on)\n        window.localStorage.setItem('refresh_token',data.refresh_token)\n        setToken(data.access_token)\n      }\n              console.log('Getting guilds: %s', window.localStorage.getItem('access_token'))\n      let servers: any = await axios.post('/api/guilds',{access_token:window.localStorage.getItem('access_token') })\n              console.log('Request finished: %o', servers)\n      setGuilds(servers.data)\n    } else {\n          window.location.href = 'https://public.shadowsniper784.repl.co/api/login' \n  //  setGuilds([])\n    }\n    }\n    run()\n  }, []);\n  \n  return (\n    <Providers\n      guild={guild}\n      setGuild={setGuild}\n      guilds={guilds}\n      setGuilds={setGuilds}\n    >\n      <Sidebar guilds={guilds} history={history} />\n      <Menu title={guild ? guild.name : 'Shadow Public'} history={history} />\n      <Routes />\n    </Providers>\n  );\n}\n\nfunction Providers({ children, guild, setGuild, guilds, setGuilds }: any) {\n  \n  return (\n    <GuildContextProvider value={{ guild, setGuild }}>\n      <GuildStoreContextProvider value={{ guilds, setGuilds }}>\n        {children}\n      </GuildStoreContextProvider>\n    </GuildContextProvider>\n  );\n}\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact={true} component={DashboardPage} />\n      <Route\n        path=\"/dashboard/:guildId\"\n        exact={true}\n        component={DashboardPage}\n      />\n      <Route\n        path=\"/dashboard/:guildId/general\"\n        exact={true}\n        component={DashboardPage}\n      />\n      \n    </Switch>\n  );\n}\n\nexport default App;\n\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { ThemeProvider } from \"styled-components\";\nimport { DarkTheme } from \"./utils/themes\";\nimport \"./index.css\";\nimport { ApolloClient, ApolloProvider, InMemoryCache } from \"@apollo/client\";\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:3001/api/graphql\",\n//   cache: new InMemoryCache(),\n//   credentials: \"include\",\n// });\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <ThemeProvider theme={DarkTheme}>\n        <App />\n      </ThemeProvider>\n      {/* <ApolloProvider client={client}>\n        <ThemeProvider theme={DarkTheme}>\n          <App />\n        </ThemeProvider>\n      </ApolloProvider> */}\n    </Router>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export interface Theme {\n  base?: any;\n  text?: any;\n  height?: any;\n  padding?: any;\n}\n\nexport const LightTheme: Theme = {};\n\nexport const DarkTheme: Theme = {\n  base: {\n    sidebar: \"#202225\",\n    menu: \"#2F3136\",\n    content: \"#36393F\",\n  },\n  text: {\n    main: \"#FFFFFF\",\n  },\n  height: {\n    topContent: \"95px\",\n  },\n  padding: {\n    content: \"20px 0px\",\n  },\n};\n"],"sourceRoot":""}