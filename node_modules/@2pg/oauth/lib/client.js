"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = (this && this.__generator) || function (thisArg, body) {
    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function() { return this; }), g;
    function verb(n) { return function (v) { return step([n, v]); }; }
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = op[0] & 2 ? y["return"] : op[0] ? y["throw"] || ((t = y["return"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [op[0] & 2, t.value];
            switch (op[0]) {
                case 0: case 1: t = op; break;
                case 4: _.label++; return { value: op[1], done: false };
                case 5: _.label++; y = op[1]; op = [0]; continue;
                case 7: op = _.ops.pop(); _.trys.pop(); continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }
                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }
                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }
                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }
                    if (t[2]) _.ops.pop();
                    _.trys.pop(); continue;
            }
            op = body.call(thisArg, _);
        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }
        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };
    }
};
var __values = (this && this.__values) || function(o) {
    var s = typeof Symbol === "function" && Symbol.iterator, m = s && o[s], i = 0;
    if (m) return m.call(o);
    if (o && typeof o.length === "number") return {
        next: function () {
            if (o && i >= o.length) o = void 0;
            return { value: o && o[i++], done: !o };
        }
    };
    throw new TypeError(s ? "Object is not iterable." : "Symbol.iterator is not defined.");
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Client = void 0;
var jsonwebtoken_1 = __importDefault(require("jsonwebtoken"));
var phin_1 = __importDefault(require("phin"));
var uid_1 = __importDefault(require("uid"));
var user_1 = __importDefault(require("./types/user"));
var api_1 = __importDefault(require("./errors/api"));
var guild_1 = __importDefault(require("./types/guild"));
var collection_1 = __importDefault(require("@discordjs/collection"));
var Client = /** @class */ (function () {
    /** Create a new OAuth2 Client. */
    function Client(options) {
        this.options = options;
        this.baseURL = 'https://discord.com/api/';
    }
    Object.defineProperty(Client.prototype, "authCodeLink", {
        /** Generates a authorization code link depending on the scopes and redirect URI set. */
        get: function () {
            if (this.options.scopes.length > 0) {
                var state = uid_1.default(16);
                return {
                    url: "https://discord.com/api/oauth2/authorize?response_type=code&client_id=" + this.options.id + "&scope=" + this.options.scopes.join('%20') + "&state=" + state + "&redirect_uri=" + this.options.redirectURI + "&prompt=none",
                    state: state
                };
            }
            else if (this.options.scopes.length < 1)
                throw new TypeError('Scopes are not defined.');
        },
        enumerable: false,
        configurable: true
    });
    /** Gets the access token for the user to perform further functions. */
    Client.prototype.getAccess = function (code) {
        return __awaiter(this, void 0, void 0, function () {
            var response, token;
            return __generator(this, function (_a) {
                switch (_a.label) {
                    case 0:
                        if (!code)
                            throw new TypeError('Authorization code not provided.');
                        return [4 /*yield*/, phin_1.default({
                                method: 'POST',
                                url: this.baseURL + "oauth2/token",
                                parse: 'json',
                                form: {
                                    client_id: this.options.id,
                                    client_secret: this.options.secret,
                                    grant_type: 'authorization_code',
                                    code: code,
                                    redirect_uri: this.options.redirectURI,
                                    scope: this.options.scopes.join(' ')
                                }
                            })];
                    case 1:
                        response = _a.sent();
                        if (response.statusCode === 200) {
                            token = response.body;
                            token['expireTimestamp'] = Date.now() + token['expires_in'] * 1000 - 10000;
                            return [2 /*return*/, jsonwebtoken_1.default.sign(token, this.options.secret, { expiresIn: token['expires_in'] })];
                        }
                        else
                            throw new api_1.default(response.statusCode);
                        return [2 /*return*/];
                }
            });
        });
    };
    /** Gets a new access token for the user whose access token has expired. */
    Client.prototype.refreshToken = function (key) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var access, response, token, err_1;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        access = this.getAccessKey(key);
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, phin_1.default({
                                url: this.baseURL + "oauth2/token",
                                method: 'POST',
                                parse: 'json',
                                form: {
                                    client_id: this.options.id,
                                    client_secret: this.options.secret,
                                    grant_type: 'refresh_token',
                                    refresh_token: access.refresh_token,
                                    redirect_uri: this.options.redirectURI,
                                    scope: this.options.scopes.join(' ')
                                }
                            })];
                    case 2:
                        response = _b.sent();
                        if (response.statusCode !== 200)
                            throw new api_1.default(response.statusCode);
                        token = response.body;
                        token.expireTimestamp = Date.now() + token['expires_in'] * 1000 - 10000;
                        return [2 /*return*/, jsonwebtoken_1.default.sign(token, this.options.secret, { expiresIn: token.expires_in })];
                    case 3:
                        err_1 = _b.sent();
                        throw (err_1.error
                            ? new TypeError(err_1.error)
                            : new api_1.default((_a = err_1.phinResponse) === null || _a === void 0 ? void 0 : _a.statusCode));
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    Client.prototype.getAccessKey = function (key) {
        try {
            return jsonwebtoken_1.default.verify(key, this.options.secret);
        }
        catch (error) {
            throw error;
        }
    };
    /** Gets the user who has authorized using the OAuth2 flow. */
    Client.prototype.getUser = function (key) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var access, response, err_2;
            return __generator(this, function (_b) {
                switch (_b.label) {
                    case 0:
                        access = this.getAccessKey(key);
                        _b.label = 1;
                    case 1:
                        _b.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, phin_1.default({
                                url: this.baseURL + "users/@me",
                                method: 'GET',
                                headers: { Authorization: access.token_type + " " + access.access_token },
                                parse: 'json'
                            })];
                    case 2:
                        response = _b.sent();
                        if (response.statusCode !== 200)
                            throw new api_1.default(response.statusCode);
                        return [2 /*return*/, new user_1.default(response.body)];
                    case 3:
                        err_2 = _b.sent();
                        throw (err_2.error
                            ? new TypeError(err_2.error)
                            : new api_1.default((_a = err_2['phinResponse']) === null || _a === void 0 ? void 0 : _a.statusCode));
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    /** Gets the guilds of an authorized user. */
    Client.prototype.getGuilds = function (key) {
        return __awaiter(this, void 0, void 0, function () {
            var access, response, guilds, _a, _b, guild, err_3;
            var e_1, _c;
            return __generator(this, function (_d) {
                switch (_d.label) {
                    case 0:
                        access = this.getAccessKey(key);
                        _d.label = 1;
                    case 1:
                        _d.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, phin_1.default({
                                url: this.baseURL + "users/@me/guilds",
                                method: 'GET',
                                headers: { Authorization: access.token_type + " " + access.access_token },
                                parse: 'json'
                            })];
                    case 2:
                        response = _d.sent();
                        if (response.statusCode !== 200)
                            throw new api_1.default(response.statusCode);
                        guilds = new collection_1.default();
                        try {
                            for (_a = __values(response.body), _b = _a.next(); !_b.done; _b = _a.next()) {
                                guild = _b.value;
                                guilds.set(guild.id, new guild_1.default(guild));
                            }
                        }
                        catch (e_1_1) { e_1 = { error: e_1_1 }; }
                        finally {
                            try {
                                if (_b && !_b.done && (_c = _a.return)) _c.call(_a);
                            }
                            finally { if (e_1) throw e_1.error; }
                        }
                        return [2 /*return*/, guilds];
                    case 3:
                        err_3 = _d.sent();
                        throw err_3;
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    /** Gets the connected third-party accounts of an authorized user. */
    Client.prototype.getConnections = function (key) {
        var _a;
        return __awaiter(this, void 0, void 0, function () {
            var access, response, connections, _b, _c, connection, err_4;
            var e_2, _d;
            return __generator(this, function (_e) {
                switch (_e.label) {
                    case 0:
                        access = this.getAccessKey(key);
                        _e.label = 1;
                    case 1:
                        _e.trys.push([1, 3, , 4]);
                        return [4 /*yield*/, phin_1.default({
                                url: this.baseURL + "users/@me/connections",
                                method: 'GET',
                                headers: { Authorization: access['token_type'] + " " + access['access_token'] },
                                parse: 'json'
                            })];
                    case 2:
                        response = _e.sent();
                        if (response.statusCode !== 200)
                            throw new api_1.default(response.statusCode);
                        connections = new collection_1.default();
                        try {
                            for (_b = __values(response.body), _c = _b.next(); !_c.done; _c = _b.next()) {
                                connection = _c.value;
                                connections.set(connection.id, connection);
                            }
                        }
                        catch (e_2_1) { e_2 = { error: e_2_1 }; }
                        finally {
                            try {
                                if (_c && !_c.done && (_d = _b.return)) _d.call(_b);
                            }
                            finally { if (e_2) throw e_2.error; }
                        }
                        return [2 /*return*/, connections];
                    case 3:
                        err_4 = _e.sent();
                        throw (err_4.error
                            ? new TypeError(err_4.error)
                            : new api_1.default((_a = err_4['phinResponse']) === null || _a === void 0 ? void 0 : _a.statusCode));
                    case 4: return [2 /*return*/];
                }
            });
        });
    };
    return Client;
}());
exports.Client = Client;
;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2xpZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vc3JjL2NsaWVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLDhEQUErQjtBQUMvQiw4Q0FBd0I7QUFDeEIsNENBQXNCO0FBQ3RCLHNEQUFnQztBQUNoQyxxREFBb0M7QUFDcEMsd0RBQWtDO0FBRWxDLHFFQUErQztBQUkvQztJQUdFLGtDQUFrQztJQUNsQyxnQkFBb0IsT0FBc0I7UUFBdEIsWUFBTyxHQUFQLE9BQU8sQ0FBZTtRQUhsQyxZQUFPLEdBQUcsMEJBQTBCLENBQUM7SUFHQSxDQUFDO0lBRzlDLHNCQUFJLGdDQUFZO1FBRGhCLHdGQUF3RjthQUN4RjtZQUNFLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDbEMsSUFBSSxLQUFLLEdBQUcsYUFBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDO2dCQUNwQixPQUFPO29CQUNMLEdBQUcsRUFBRSwyRUFBeUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxFQUFFLGVBQVUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxlQUFVLEtBQUssc0JBQWlCLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxpQkFBYztvQkFDNU0sS0FBSyxPQUFBO2lCQUNOLENBQUM7YUFDSDtpQkFBTSxJQUFJLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLE1BQU0sR0FBRyxDQUFDO2dCQUN2QyxNQUFNLElBQUksU0FBUyxDQUFDLHlCQUF5QixDQUFDLENBQUM7UUFDbkQsQ0FBQzs7O09BQUE7SUFFRCx1RUFBdUU7SUFDakUsMEJBQVMsR0FBZixVQUFnQixJQUFZOzs7Ozs7d0JBQzFCLElBQUksQ0FBQyxJQUFJOzRCQUNQLE1BQU0sSUFBSSxTQUFTLENBQUMsa0NB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