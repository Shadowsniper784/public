/** A discord user who has authorized your app to have access to their data. */
export default class User {
    /** The user's discord username. */
    username: string;
    /** The user's locale. */
    locale: string;
    /** Whether the user has enabled 2-factor authentication. */
    isMFAEnabled: boolean;
    /** The user's discriminator (e.g. '0001'). */
    discriminator: string;
    /** The user's unique discord ID. */
    id: string;
    /** The user's E-Mail ID. */
    emailId: string;
    /** Whether the user's E-Mail ID has been verified. */
    emailVerified: boolean;
    /** The user's profile's flags. */
    userFlags: string[];
    /** The user's avatar hash. */
    avatarHash: string;
    /** The premium subscription type. */
    premiumType: string;
    /** Whether the user is a discord bot. */
    bot: boolean;
    /** Get the URL of a user's display avatar. */
    readonly displayAvatarURL: string;
    /** Tag of the user (e.g. ADAMJR#0001) */
    readonly tag: string;
    constructor({ username, locale, mfa_enabled, flags, avatar, discriminator, id, email, verified, premium_type, bot }: {
        username: any;
        locale: any;
        mfa_enabled: any;
        flags?: number;
        avatar?: any;
        discriminator: any;
        id: any;
        email?: any;
        verified?: any;
        premium_type?: number;
        bot?: boolean;
    });
    private buildFlags;
    /** The timestamp of the creation of the user's account. */
    get createdTimestamp(): number;
    /** The time of creation of the user's account. */
    get createdAt(): Date;
    /** Get the URL of a user's avatar, with options. */
    avatarURL(options?: AvatarOptions): string;
}
export interface AvatarOptions {
    dynamic?: boolean;
    size?: number;
}
